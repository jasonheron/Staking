"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.filterSafeListByFirmware = exports.filterSafeListByBootloader = exports.isValidReleases = exports.isStrictFeatures = void 0;
const tslib_1 = require("tslib");
const versionUtils = tslib_1.__importStar(require("@trezor/utils/lib/versionUtils"));
const isStrictFeatures = (extFeatures) => [1, 2].includes(extFeatures.major_version) &&
    (extFeatures.firmware_present === false ||
        extFeatures.bootloader_mode == null ||
        extFeatures.bootloader_mode === true);
exports.isStrictFeatures = isStrictFeatures;
const isValidReleases = (extReleases) => Array.isArray(extReleases) &&
    extReleases.every(release => release.version && release.min_firmware_version && release.min_bootloader_version);
exports.isValidReleases = isValidReleases;
const filterSafeListByBootloader = (releasesList, bootloaderVersion) => releasesList.filter(item => (!item.min_bootloader_version ||
    versionUtils.isNewerOrEqual(bootloaderVersion, item.min_bootloader_version)) &&
    (!item.bootloader_version ||
        versionUtils.isNewerOrEqual(item.bootloader_version, bootloaderVersion)));
exports.filterSafeListByBootloader = filterSafeListByBootloader;
const filterSafeListByFirmware = (releasesList, firmwareVersion) => releasesList.filter(item => versionUtils.isNewerOrEqual(firmwareVersion, item.min_firmware_version));
exports.filterSafeListByFirmware = filterSafeListByFirmware;
//# sourceMappingURL=firmwareUtils.js.map